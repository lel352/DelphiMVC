unit uClienteDao;

interface

uses uClienteModel, FireDac.Comp.Client, uConexao;

type
   TClienteDao = class
   private
     FConexao: TConexao;
   public
      constructor create;

      function incluir(clienteModel: TClienteModel): boolean;
      function alterar(clienteModel: TClienteModel): boolean;
      function deletar(clienteModel: TClienteModel): boolean;
      function getId(autoInclimentar: Integer): Integer;
      function obter: TFDQuery;
   end;

implementation

{ TClienteDao }

uses uSistemaControl;

function TClienteDao.alterar(clienteModel: TClienteModel): boolean;
var
  vQuery : TFDQuery;
begin
  vQuery := FConexao.criarQuery;
  try
     try
       vQuery.ExecSQL('update cliente set nome = :nome where (codigo = :codigo)',[clienteModel.nome,clienteModel.codigo]);
       result := True;
     except
       result := False;
     end;
  finally
     vQuery.Free;
  end;
end;

constructor TClienteDao.create;
begin
   FConexao := TSistemaControl.getIntance.conexao;
end;

function TClienteDao.deletar(clienteModel: TClienteModel): boolean;
var
  vQuery : TFDQuery;
begin
  vQuery := FConexao.criarQuery;
  try
     try
       vQuery.ExecSQL('delete from cliente where codigo = :codigo',[clienteModel.codigo]);
       result := True;
     except
       result := False;
     end;
  finally
     vQuery.Free;
  end;
end;

function TClienteDao.getId(autoInclimentar: Integer): Integer;
begin

end;

function TClienteDao.incluir(clienteModel: TClienteModel): boolean;
var
  vQuery : TFDQuery;
begin
  vQuery := FConexao.criarQuery;
  try
     try
       vQuery.ExecSQL('Insert into cliente (nome) values (:nome)',[clienteModel.nome]);
       result := True;
     except
       result := False;
     end;

  finally
     vQuery.Free;
  end;
end;

function TClienteDao.obter: TFDQuery;
var
  vQuery : TFDQuery;
begin
  vQuery := FConexao.criarQuery;
  vQuery.Open('Select codigo, nome From Cliente');
  result := vQuery;
end;

end.
